function escapeHtml(text) {
    if (!text) return text
    return text.toString()
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#39;')
}

function translateFormValue(key, value) {
    const translations = {
        gender: {
            'male': '–ß–æ–ª–æ–≤—ñ—á–∞',
            'female': ': –ñ—ñ–Ω–æ—á–∞'
        },
        mobility: {
            'yes': '–¢–∞–∫',
            'no': '–ù—ñ',
            'with_help': '–ó –¥–æ–ø–æ–º–æ–≥–æ—é'
        },
        mentalHealth: {
            'low': '–ù–∏–∑—å–∫–∞',
            'medium': '–°–µ—Ä–µ–¥–Ω—è',
            'high': '–í–∏—Å–æ–∫–∞'
        }
    }

    return translations[key] && translations[key][value] ? translations[key][value] : value
}

function buildContactMessage(data) {
    const name = escapeHtml(data.name)
    const phone = escapeHtml(data.phone)
    const message = escapeHtml(data.message)

    return `
<b>üìû –ù–æ–≤–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –∑–∞—è–≤–∫–∞</b>

<b>–Ü–º‚Äô—è:</b> ${name}
<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${phone}
<b>–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b> ${message}
`.trim()
}

function buildCalculatorMessage(data) {
    const age = escapeHtml(data.age)
    const gender = escapeHtml(translateFormValue('gender', data.gender))
    const mobility = escapeHtml(translateFormValue('mobility', data.mobility))
    const mentalHealth = escapeHtml(translateFormValue('mentalHealth', data.mentalHealth))
    const roomCapacity = escapeHtml(data.roomCapacity)
    const phone = escapeHtml(data.phone)

    return `
<b>üè† –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –∑ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞</b>

<b>–í—ñ–∫:</b> ${age}
<b>–°—Ç–∞—Ç—å:</b> ${gender}
<b>–ú–æ–∂–µ –ø–µ—Ä–µ—Å—É–≤–∞—Ç–∏—Å—å:</b> ${mobility}
<b>–ü—Å–∏—Ö—ñ—á–Ω–∏–π —Å—Ç–∞–Ω:</b> ${mentalHealth}
<b>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –º—ñ—Å—Ü—å —É –∫—ñ–º–Ω–∞—Ç—ñ:</b> ${roomCapacity}
<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${phone}
`.trim()
}


async function sendToTelegram(data, type = 'contact') {
    const token = process.env.TELEGRAM_BOT_TOKEN
    const chatId = process.env.TELEGRAM_CHAT_ID

    let message = ''

    if (type === 'calculator') {
        message = buildCalculatorMessage(data)
    } else if (type === 'contact') {
        message = buildContactMessage(data)
    } else {
        throw new Error(`Unknown form type: ${type}`)
    }

    const url = `https://api.telegram.org/bot${token}/sendMessage`
    console.log('Sending message to Telegram:', message)

    try {
        const response = await fetch(url, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: 'HTML'
            })
        })

        if (!response.ok) {
            const errText = await response.text()
            console.error('Telegram API error response:', errText)
            throw new Error(`Telegram API error: ${errText}`)
        }

        const result = await response.json()
        console.log('Message sent successfully:', result)
        return result
    } catch (error) {
        console.error('Error sending to Telegram:', error)
        throw error
    }
}

module.exports = { sendToTelegram }